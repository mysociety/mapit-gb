# general.yml-example:
# Example values for the "general.yml" config file.
#
# Copy this file to one called "general.yml" in the same directory. Or have
# multiple config files and use a symlink to change between them.

# Connection details for database
MAPIT_DB_NAME: 'mapit'
MAPIT_DB_USER: 'mapit'
MAPIT_DB_PASS: ''
MAPIT_DB_HOST: null
MAPIT_DB_PORT: null

REDIS_DB_HOST: 'localhost'
REDIS_DB_PORT: 6379
REDIS_DB_NUMBER: 0
REDIS_DB_PASSWORD: null

# Country is currently one of GB, NO, or KE. Optional; country specific things won't happen if not set.
COUNTRY: 'GB'

# An EPSG code for what the areas are stored as, e.g. 27700 is OSGB, 4326 for WGS84.
# Optional, defaults to 4326.
AREA_SRID: 27700

# A secret key for this particular Django installation.
# Set this to a random string -- the longer, the better.
DJANGO_SECRET_KEY: 'gu^&xc)hoibh3x&s+9009jbn4d$!nq0lz+syx-^x8%z24!kfs4'

# Mapped to Django's DEBUG and TEMPLATE_DEBUG settings. Optional, defaults to True.
DEBUG: True

# A GA code
GOOGLE_ANALYTICS: ""

# A list of IP addresses or User Agents that should be excluded from rate limiting. Optional.
RATE_LIMIT:
  - '127.0.0.1'

# Email address that errors should be sent to. Optional.
BUGS_EMAIL: 'example@example.org'

# Fully qualified url that the site lives at, so that we can make emails with
# fully qualified links in
SITE_BASE_URL: 'http://www.example.com'

# Name for the site, for use in the above sites framework
SITE_NAME: 'MapIt: UK'

# An email address for support enquiries (Used by django-user-acounts to give
# people signing up someone to contact for example)
CONTACT_EMAIL: support@example.org
EMAIL_PORT: 25

# The name of this api in the redis api management db
REDIS_API_NAME: 'mapit.mysociety.org'

# Should the API be restricted to users with API Keys only?
# Note: you can still have api keys and set rate limits on them independently
# of this setting
API_RESTRICT: False

# Should the API be throttled?
API_THROTTLE: False

# How long a time period should the api rate limiter count hits over (seconds)
API_THROTTLE_COUNTER_TIME: 360

# How many hits during the API_THROTTLE_COUNTER_TIME can a single user make
# by default?
# Note: you can still set limits, or have no limit at all, for individual api
# keys or IP addresses independent of this setting
API_THROTTLE_DEFAULT: 360

# How long should users who go over the rate limit be blocked for? (Seconds)
API_THROTTLE_BLOCK_TIME: 360
